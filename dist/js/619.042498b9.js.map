{"version":3,"file":"js/619.042498b9.js","mappings":"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","sources":["webpack://IDNCreaterPages/./node_modules/mermaid/dist/classDiagram-v2-72bddc41.js"],"sourcesContent":["import { p as parser, d as db, s as styles } from \"./styles-16907e1b.js\";\nimport { select, curveLinear } from \"d3\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { l as log, g as getConfig, e as common } from \"./commonDb-573409be.js\";\nimport { r as render } from \"./index-5219d011.js\";\nimport { u as utils, s as setupGraphViewbox, o as interpolateToCurve, n as getStylesFromArray } from \"./utils-d622194a.js\";\nimport \"./mermaidAPI-3ae0f2f0.js\";\nimport \"stylis\";\nimport \"dompurify\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dayjs\";\nimport \"khroma\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-2e77835f.js\";\nimport \"./createText-1f5f8f92.js\";\nimport \"@khanacademy/simple-markdown\";\nimport \"./svgDraw-2526cba0.js\";\nimport \"@braintree/sanitize-url\";\nimport \"lodash-es/memoize.js\";\nconst sanitizeText = (txt) => common.sanitizeText(txt, getConfig());\nlet conf = {\n  dividerMargin: 10,\n  padding: 5,\n  textHeight: 10,\n  curve: void 0\n};\nconst addClasses = function(classes, g, _id, diagObj) {\n  const keys = Object.keys(classes);\n  log.info(\"keys:\", keys);\n  log.info(classes);\n  keys.forEach(function(id) {\n    var _a, _b;\n    const vertex = classes[id];\n    let cssClassStr = \"\";\n    if (vertex.cssClasses.length > 0) {\n      cssClassStr = cssClassStr + \" \" + vertex.cssClasses.join(\" \");\n    }\n    const styles2 = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.label ?? vertex.id;\n    const radius = 0;\n    const shape = \"class_box\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      classData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssClassStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.domId,\n      tooltip: diagObj.db.getTooltip(vertex.id) || \"\",\n      haveCallback: vertex.haveCallback,\n      link: vertex.link,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    log.info(\"setNode\", node);\n  });\n};\nconst addNotes = function(notes, g, startEdgeId, classes) {\n  log.info(notes);\n  notes.forEach(function(note, i) {\n    var _a, _b;\n    const vertex = note;\n    const cssNoteStr = \"\";\n    const styles2 = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.text;\n    const radius = 0;\n    const shape = \"note\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      noteData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssNoteStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.id,\n      tooltip: \"\",\n      type: \"note\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    log.info(\"setNode\", node);\n    if (!vertex.class || !(vertex.class in classes)) {\n      return;\n    }\n    const edgeId = startEdgeId + i;\n    const edgeData = {\n      id: `edgeNote${edgeId}`,\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: \"dotted\",\n      // Set link type for rendering\n      arrowhead: \"none\",\n      //Set edge extra labels\n      startLabelRight: \"\",\n      endLabelLeft: \"\",\n      //Set relation arrow types\n      arrowTypeStart: \"none\",\n      arrowTypeEnd: \"none\",\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf.curve, curveLinear)\n    };\n    g.setEdge(vertex.id, vertex.class, edgeData, edgeId);\n  });\n};\nconst addRelations = function(relations, g) {\n  const conf2 = getConfig().flowchart;\n  let cnt = 0;\n  relations.forEach(function(edge) {\n    var _a;\n    cnt++;\n    const edgeData = {\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: edge.relation.lineType == 1 ? \"dashed\" : \"solid\",\n      id: \"id\" + cnt,\n      // Set link type for rendering\n      arrowhead: edge.type === \"arrow_open\" ? \"none\" : \"normal\",\n      //Set edge extra labels\n      startLabelRight: edge.relationTitle1 === \"none\" ? \"\" : edge.relationTitle1,\n      endLabelLeft: edge.relationTitle2 === \"none\" ? \"\" : edge.relationTitle2,\n      //Set relation arrow types\n      arrowTypeStart: getArrowMarker(edge.relation.type1),\n      arrowTypeEnd: getArrowMarker(edge.relation.type2),\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf2 == null ? void 0 : conf2.curve, curveLinear)\n    };\n    log.info(edgeData, edge);\n    if (edge.style !== void 0) {\n      const styles2 = getStylesFromArray(edge.style);\n      edgeData.style = styles2.style;\n      edgeData.labelStyle = styles2.labelStyle;\n    }\n    edge.text = edge.title;\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (((_a = getConfig().flowchart) == null ? void 0 : _a.htmlLabels) ?? getConfig().htmlLabels) {\n        edgeData.labelType = \"html\";\n        edgeData.label = '<span class=\"edgeLabel\">' + edge.text + \"</span>\";\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    g.setEdge(edge.id1, edge.id2, edgeData, cnt);\n  });\n};\nconst setConf = function(cnf) {\n  conf = {\n    ...conf,\n    ...cnf\n  };\n};\nconst draw = function(text, id, _version, diagObj) {\n  log.info(\"Drawing class - \", id);\n  const conf2 = getConfig().flowchart ?? getConfig().class;\n  const securityLevel = getConfig().securityLevel;\n  log.info(\"config:\", conf2);\n  const nodeSpacing = (conf2 == null ? void 0 : conf2.nodeSpacing) ?? 50;\n  const rankSpacing = (conf2 == null ? void 0 : conf2.rankSpacing) ?? 50;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: diagObj.db.getDirection(),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const classes = diagObj.db.getClasses();\n  const relations = diagObj.db.getRelations();\n  const notes = diagObj.db.getNotes();\n  log.info(relations);\n  addClasses(classes, g, id, diagObj);\n  addRelations(relations, g);\n  addNotes(notes, g, relations.length + 1, classes);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? (\n    // @ts-ignore Ignore type error for now\n    select(sandboxElement.nodes()[0].contentDocument.body)\n  ) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  render(\n    element,\n    g,\n    [\"aggregation\", \"extension\", \"composition\", \"dependency\", \"lollipop\"],\n    \"classDiagram\",\n    id\n  );\n  utils.insertTitle(svg, \"classTitleText\", (conf2 == null ? void 0 : conf2.titleTopMargin) ?? 5, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2 == null ? void 0 : conf2.diagramPadding, conf2 == null ? void 0 : conf2.useMaxWidth);\n  if (!(conf2 == null ? void 0 : conf2.htmlLabels)) {\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n};\nfunction getArrowMarker(type) {\n  let marker;\n  switch (type) {\n    case 0:\n      marker = \"aggregation\";\n      break;\n    case 1:\n      marker = \"extension\";\n      break;\n    case 2:\n      marker = \"composition\";\n      break;\n    case 3:\n      marker = \"dependency\";\n      break;\n    case 4:\n      marker = \"lollipop\";\n      break;\n    default:\n      marker = \"none\";\n  }\n  return marker;\n}\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n//# sourceMappingURL=classDiagram-v2-72bddc41.js.map\n"],"names":["sanitizeText","txt","g","conf","dividerMargin","padding","textHeight","curve","addClasses","classes","_id","diagObj","keys","Object","l","forEach","id","_a","_b","vertex","cssClassStr","cssClasses","length","join","styles2","labelStyle","style","vertexText","label","radius","shape","node","labelText","classData","rx","ry","class","domId","tooltip","db","getTooltip","haveCallback","link","width","type","flowchart","setNode","addNotes","notes","startEdgeId","note","i","cssNoteStr","text","noteData","edgeId","edgeData","pattern","arrowhead","startLabelRight","endLabelLeft","arrowTypeStart","arrowTypeEnd","setEdge","addRelations","relations","conf2","cnt","edge","relation","lineType","relationTitle1","relationTitle2","getArrowMarker","type1","type2","title","arrowheadStyle","labelpos","htmlLabels","labelType","replace","id1","id2","setConf","cnf","draw","_version","securityLevel","nodeSpacing","rankSpacing","multigraph","compound","setGraph","rankdir","getDirection","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","getClasses","getRelations","getNotes","sandboxElement","root","nodes","contentDocument","body","svg","select","element","r","u","titleTopMargin","getDiagramTitle","s","diagramPadding","useMaxWidth","doc","document","labels","querySelectorAll","dim","getBBox","rect","createElementNS","setAttribute","height","insertBefore","firstChild","marker","renderer","diagram","parser","styles","init","arrowMarkerAbsolute","d"],"sourceRoot":""}