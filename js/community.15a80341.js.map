{"version":3,"file":"js/community.15a80341.js","mappings":"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","sources":["webpack://IDNCreaterPages/./src/stores/novelStore.js","webpack://IDNCreaterPages/./src/views/CommunityView.vue","webpack://IDNCreaterPages/./src/components/tutorials/CommunityTutorial.vue","webpack://IDNCreaterPages/./src/components/tutorials/CommunityTutorial.vue?af68","webpack://IDNCreaterPages/./src/views/CommunityView.vue?b2b4"],"sourcesContent":["import { defineStore } from 'pinia'\n\nexport const useNovelStore = defineStore('novelState', {\n  // arrow function recommended for full type inference\n  state: () => {\n    return {\n      // all these properties will have their type inferred automatically\n      currentNovel: null,\n      novels: [\n        \n      ]\n    }\n  },\n  actions: {\n    async setCurrentNovel(text) {\n      this.currentNovel = text;\n    },\n    setNovelContent(index, content) {\n      this.novels[index].content = content;\n    },\n  },\n})","<template>\n  <div class=\"community\">\n    <CommunityTutorial></CommunityTutorial>\n    <header class=\"header\" v-if=\"store.btnToggle\">\n      <h1 class=\"h1\">IDN Community</h1>\n    </header>\n    <header class=\"header\">\n      <h2>Popular Novels For Reading</h2>\n      <button class=\"button\" @click=\"importFile()\">Submit Image/Text</button>\n      <input type=\"file\" id=\"file-input\" style=\"display: none\" @change=\"onFileInputChange\">\n    </header>\n    <br />\n    <div class=\"novels-container\">\n      <div class=\"novel-item\" v-for=\"(novel, index) in this.novelStore.novels\" :key=\"novel.title\">\n        <div>\n          <div @click=\"readNovel(index)\">\n            <img :src=\"novel.cover\" :alt=\"novel.title\" class=\"novel-cover\" />\n          </div>\n        </div>\n        <h3>{{ novel.title }}</h3>\n      </div>\n    </div>\n    <header class=\"header\">\n      <h2>Popular Novels For Continue</h2>\n      <button class=\"button\" @click=\"importFile()\">Submit Image/Text</button>\n      <input type=\"file\" id=\"file-input\" style=\"display: none\" @change=\"onFileInputChange\">\n    </header>\n    <br />\n    <div class=\"novels-container\">\n      <div class=\"novel-item\" v-for=\"(novel, index) in this.novelStore.novels\" :key=\"novel.title\">\n        <div>\n          <div @click=\"writeNovel(index)\">\n            <img :src=\"novel.cover\" :alt=\"novel.title\" class=\"novel-cover\" />\n          </div>\n        </div>\n        <h3>{{ novel.title }}</h3>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { useNovelStore } from \"../stores/novelStore\";\nimport { useStore } from \"../stores/store\";\nimport { useUserStore } from '../stores/userStore';\nimport { app } from \"../../firebaseConfig\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL, listAll } from \"firebase/storage\";\nimport { getAuth } from \"firebase/auth\";\nimport CommunityTutorial from '../components/tutorials/CommunityTutorial.vue';\n\nexport default {\n  components: {\n    CommunityTutorial,\n  },\n  setup() {\n    const novelStore = useNovelStore();\n    const store = useStore();\n    const user = useUserStore();\n    return { user, store, novelStore };\n  },\n  async mounted() {\n    const auth = getAuth();\n    this.novelStore.novels = [];\n    if (auth.currentUser != null) {\n      await this.fetchNovelsFromFirebase();\n    } else {\n      alert(\"Please go to the Login interface to log in/register first\")\n    }\n  },\n  methods: {\n    async fetchNovelsFromFirebase() {\n      const storage = getStorage(app);\n      const novelsRef = ref(storage, 'Novels');\n      const coverRef = ref(storage, 'Novels-Cover');\n      // List all files in the 'Novels' folder\n      const resN = await listAll(novelsRef);\n      const files = resN.items;\n      // Get the download URL for each file and store the novel information in the novelStore\n      files.forEach(async (file) => {\n        const downloadURL = await getDownloadURL(file);\n        const title = file.name.replace('.txt', ''); // Extract the title from the file name\n        this.novelStore.novels.push({\n          title: title,\n          cover: null,\n          content: downloadURL,\n        });\n      });\n      const resNC = await listAll(coverRef);\n      const filesC = resNC.items;\n      filesC.forEach(async (fileC) => {\n        const downloadURLC = await getDownloadURL(fileC);\n        const title = fileC.name.replace('.png', ''); // Extract the title from the file name\n        for (let i = 0; i < this.novelStore.novels.length; i++) {\n          if (this.novelStore.novels[i].title === title) {\n            this.novelStore.novels[i].cover = downloadURLC;\n          }\n        }\n      });\n      const deCoverRef = ref(storage, 'Novels-Cover/Default.png');\n      const downloadDeCoverURL = await getDownloadURL(deCoverRef);\n      this.novelStore.novels.forEach((novel) => { novel.cover = novel.cover === null ? downloadDeCoverURL : novel.cover; })\n    },\n\n    async uploadTextFileToFirebase(file) {\n      const storage = getStorage(app);\n      const storageRef = ref(storage, `Novels/${file.name}`);\n      const token = this.user.userInfo.token;\n      const uploadTask = uploadBytesResumable(storageRef, file, {\n        // 包含身份验证令牌的自定义元数据\n        customMetadata: {\n          'firebaseAuth': token,\n        }\n      });\n      uploadTask.on('state_changed',\n        (snapshot) => {\n          // Observe state change events such as progress, pause, and resume\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + progress + '% done');\n          switch (snapshot.state) {\n            case 'paused':\n              console.log('Upload is paused');\n              break;\n            case 'running':\n              console.log('Upload is running');\n              break;\n            default:\n              break;\n          }\n        },\n        (error) => {\n          // Handle unsuccessful uploads\n          console.error('Upload failed:', error);\n          alert(\"Uploading to the server failed, please check if you are logged in\")\n        },\n        async () => {\n          // Handle successful uploads on complete\n          const downloadURL = await getDownloadURL(storageRef);\n          alert('File available at', downloadURL);\n          // Call a function to handle the file URL, e.g., save it in your database\n          // handleFileURL(downloadURL);\n        }\n      );\n    },\n    async writeNovel(index) {\n      const novelURL = this.novelStore.novels[index].content;\n      const response = await fetch(novelURL, {\n        mode: 'cors',\n      });\n\n      if (response.ok) {\n        const text = await response.text();\n        this.novelStore.setCurrentNovel(text);\n        // 使用 this.$router.push 进行跳转\n        await this.$router.push({\n          name: \"author\",\n          query: {\n            startReading: true,\n          },\n        });\n      } else {\n        console.error(\"Failed to download the novel from Firebase Storage\");\n      }\n    },\n\n    async readNovel(index) {\n      const novelURL = this.novelStore.novels[index].content;\n      const response = await fetch(novelURL, {\n        mode: 'cors',\n      });\n\n      if (response.ok) {\n        const text = await response.text();\n        this.novelStore.setCurrentNovel(text);\n        // 使用 this.$router.push 进行跳转\n        await this.$router.push({\n          name: \"reader\",\n          query: {\n            startReading: true,\n          },\n        });\n      } else {\n        console.error(\"Failed to download the novel from Firebase Storage\");\n      }\n    },\n\n    importFile() {\n      const fileInput = document.getElementById(\"file-input\");\n      fileInput.setAttribute(\"multiple\", \"multiple\"); // 允许选择多个文件\n      fileInput.click();\n    },\n    onFileInputChange(event) {\n      const files = event.target.files;\n      for (const file of files) {\n        if (file.type.startsWith(\"image/\")) {\n          this.uploadImageFileToFirebase(file); // 上传图片文件到 Firebase Storage\n        } else if (file.type === \"text/plain\") {\n          this.uploadTextFileToFirebase(file); // 上传文本文件到 Firebase Storage\n          const reader = new FileReader();\n          reader.onload = (event) => {\n            const text = event.target.result;\n            this.parseNovelText(text);\n          };\n          reader.readAsText(file);\n        } else {\n          alert(\"Please import a supported text or image file\");\n        }\n      }\n    },\n\n    // 添加一个新方法用于上传图片文件\n    async uploadImageFileToFirebase(file) {\n      const storage = getStorage(app);\n      const storageRef = ref(storage, `Novels-Cover/${file.name}`);\n      const token = this.user.userInfo.token;\n      const uploadTask = uploadBytesResumable(storageRef, file, {\n        customMetadata: {\n          firebaseAuth: token,\n        },\n      });\n\n      uploadTask.on('state_changed',\n        (snapshot) => {\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + progress + '% done');\n          switch (snapshot.state) {\n            case 'paused':\n              console.log('Upload is paused');\n              break;\n            case 'running':\n              console.log('Upload is running');\n              break;\n            default:\n              break;\n          }\n        },\n        (error) => {\n          console.error('Upload failed:', error);\n          alert(\"Uploading to the server failed, please check if you are logged in\");\n        },\n        async () => {\n          const downloadURL = await getDownloadURL(storageRef);\n          alert('File available at', downloadURL);\n        }\n      );\n    },\n\n    parseNovelText(text) {\n      const lines = text.trim().split('\\n');\n\n      //let author = '';\n      //let content = '';\n      //let l = 0;\n      this.store.btnToggle = !this.store.btnToggle;\n      if (lines[0].startsWith('Story Title: ')) {\n        let title = lines[0].slice(13);\n        this.novelStore.novels.push({\n          \"title\": title,\n        })\n      } else {\n        alert(\"Please import a text file in the format used by this site\")\n      }\n\n\n    }\n  },\n};\n</script>\n\n<style>\n.community {\n  text-align: left;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n}\n\n.novels-container {\n  margin-left: 5em;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: left;\n  gap: 16px;\n}\n\n.novel-item>div {\n  display: inline-block;\n  text-align: center;\n}\n\n.novel-cover {\n  width: 200px;\n  height: auto;\n  cursor: pointer\n}\n</style>\n","<template>\n    <transition name=\"fade\">\n      <div v-if=\"this.store.tutorialToggle\" class=\"tutorial\">\n        <div class=\"tutorial-item\">\n          <h1>The IDN Community page needs to be logged in before operating</h1>\n        </div>\n        <div class=\"tutorial-item\">\n          <button class=\"button\">Submit Image/Text</button>\n          <p>Submit a story/picture that conforms to the format of this website locally to the community, and the picture needs to be the same as the story file name to be automatically matched</p>\n        </div>\n        <div class=\"tutorial-item\">\n          <h3>Popular Novels For Reading</h3>\n          <p>The listed stories can be read by clicking on the cover</p>\n        </div>\n      </div>\n    </transition>\n  </template>\n<script>\nimport { useStore } from '../../stores/store';\n\nexport default {\n  setup() {\n    const store = useStore();\n    return { store };\n  },\n};\n</script>\n  ","import { render } from \"./CommunityTutorial.vue?vue&type=template&id=052cab44\"\nimport script from \"./CommunityTutorial.vue?vue&type=script&lang=js\"\nexport * from \"./CommunityTutorial.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tggs636/Desktop/IDNCreater/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./CommunityView.vue?vue&type=template&id=8e84e434\"\nimport script from \"./CommunityView.vue?vue&type=script&lang=js\"\nexport * from \"./CommunityView.vue?vue&type=script&lang=js\"\n\nimport \"./CommunityView.vue?vue&type=style&index=0&id=8e84e434&lang=css\"\n\nimport exportComponent from \"/Users/tggs636/Desktop/IDNCreater/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["useNovelStore","defineStore","state","currentNovel","novels","actions","async","text","this","setNovelContent","index","content","class","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","_createVNode","_component_CommunityTutorial","$setup","btnToggle","_hoisted_2","_hoisted_5","_hoisted_6","onClick","$options","type","id","style","onChange","_hoisted_7","_hoisted_8","_Fragment","novelStore","novel","key","title","src","cover","alt","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_4","_createBlock","_Transition","name","store","tutorialToggle","setup","useStore","__exports__","components","CommunityTutorial","user","useUserStore","auth","getAuth","currentUser","fetchNovelsFromFirebase","alert","methods","storage","getStorage","app","novelsRef","ref","coverRef","resN","listAll","files","items","forEach","downloadURL","getDownloadURL","file","replace","push","resNC","filesC","downloadURLC","fileC","i","length","deCoverRef","downloadDeCoverURL","storageRef","token","userInfo","uploadTask","uploadBytesResumable","customMetadata","on","snapshot","progress","bytesTransferred","totalBytes","console","log","error","novelURL","response","fetch","mode","ok","setCurrentNovel","$router","query","startReading","importFile","fileInput","document","getElementById","setAttribute","click","onFileInputChange","event","target","startsWith","uploadImageFileToFirebase","uploadTextFileToFirebase","reader","FileReader","onload","result","parseNovelText","readAsText","firebaseAuth","lines","trim","split","slice","render"],"sourceRoot":""}