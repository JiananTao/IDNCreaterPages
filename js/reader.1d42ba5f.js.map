{"version":3,"file":"js/reader.1d42ba5f.js","mappings":"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","sources":["webpack://IDNCreaterPages/./src/stores/novelStore.js","webpack://IDNCreaterPages/./src/views/ReaderView.vue","webpack://IDNCreaterPages/./src/components/tutorials/ReaderTutorial.vue","webpack://IDNCreaterPages/./src/components/tutorials/ReaderTutorial.vue?c628","webpack://IDNCreaterPages/./src/views/ReaderView.vue?8c8c"],"sourcesContent":["import { defineStore } from 'pinia'\n\nexport const useNovelStore = defineStore('novelState', {\n  // arrow function recommended for full type inference\n  state: () => {\n    return {\n      // all these properties will have their type inferred automatically\n      currentNovel: null,\n      novels: [\n        \n      ]\n    }\n  },\n  actions: {\n    async setCurrentNovel(text) {\n      this.currentNovel = text;\n    },\n    setNovelContent(index, content) {\n      this.novels[index].content = content;\n    },\n  },\n})","<template>\n  <div>\n    <ReaderTutorial></ReaderTutorial>\n    <header class=\"header\" v-if=\"store.btnToggle\">\n      <h1 class=\"h1\">Mulit-Author Interactive Novel Reader</h1>\n      <button class=\"button\" @click=\"importFile()\">Import</button>\n    </header>\n    <div>\n      <h1 class=\"h1\">{{ novel.title }}</h1>\n      <p v-if=\"novel.author\">Written by {{ novel.author }}</p>\n      <hr />\n      <div v-for=\"(readContent, index) in highlightedReadContents\" :key=\"index\" class=\"read-content\" v-html=\"readContent\"></div>\n      <p class=\"content\" v-html=\"highlightedCurrentSceneContent\" @click=\"handleWordClick\"></p>\n    </div>\n    <button style=\"all: unset; cursor: pointer;\" @click=\"preScene\">back to previous scene</button>&emsp;\n    <input type=\"file\" id=\"file-input\" style=\"display: none\" @change=\"onFileInputChange\">\n  </div>\n</template>\n\n<script>\nimport { useNovelStore } from '../stores/novelStore'\nimport { useStore } from '../stores/store'\nimport ReaderTutorial from '../components/tutorials/ReaderTutorial.vue';\nexport default {\n  components: {\n    ReaderTutorial,\n  },\n  setup() {\n    const store = useStore();\n    const novelStore = useNovelStore();\n    return { store, novelStore }\n  },\n  data() {\n    return {\n      //past read grey\n      readContents: [],\n      //past selected word\n      selectedWords: [],\n      readingOrder: [],\n      novel: {\n        title: '',\n        author: '',\n        content: ''\n      },\n      paragraphs: [],\n      currentScene: {\n        sourceIndex: '',\n        wordIndex: '',\n        content: ''\n      },\n      index:0\n      \n    }\n  },\n  created() {\n    this.fromCommunity();\n  },\n  computed: {\n    highlightedReadContents() {\n      return this.readContents.map((readContent, index) => {\n        const selectedWord = this.selectedWords[index];\n        if (selectedWord) {\n          const regex = new RegExp(`(${selectedWord})`, 'gi');\n          return readContent.replace(\n            regex,\n            `<span class=\"highlighted-word-underlined\">$1</span>`\n          );\n        }\n        return readContent;\n      });\n    },\n    highlightedCurrentSceneContent() {\n      let content = this.currentScene.content;\n      this.paragraphs.forEach((paragraph) => {\n        if (paragraph.sourceIndex === this.currentScene.paragraphIndex) {\n          const regex = new RegExp(`(${paragraph.wordIndex})`, 'gi');\n          content = content.replace(regex, `<span class=\"highlighted-word\">$1</span>`);\n        }\n      });\n      return content;\n    }\n  },\n  methods: {\n    fromCommunity() {\n      if (this.$route.query.startReading) {\n        // Start reading automatically\n        //console.log(this.novelStore.currentNovel);\n        if (this.novelStore.currentNovel != null) {\n          this.parseNovelText(this.novelStore.currentNovel);\n          //console.log(this.novelStore.currentNovel);\n        } else {\n          alert(\"Please go to the community interface to select the book\")\n        }\n      }\n      return null;\n    },\n    preScene() {\n      if (this.readingOrder.length > 1) {\n        const preNode = this.readingOrder[this.readingOrder.length - 1];\n        const preParagraph = this.paragraphs.find((paragraph) => {\n          return paragraph.paragraphIndex === preNode;\n        });\n        this.readingOrder.pop(); // 移除当前场景\n        this.readContents.pop(); // 移除最后一个已读段落\n        this.selectedWords.pop();\n        if (preParagraph) {\n          this.currentScene.sourceIndex = preParagraph.sourceIndex;\n          this.currentScene.wordIndex = preParagraph.wordIndex;\n          this.currentScene.content = preParagraph.content;\n          this.currentScene.paragraphIndex = preParagraph.paragraphIndex;\n        } else {\n          alert(\"The previous scene was not found, please make sure you are not in the first scene\");\n        }\n      } else {\n        alert(\"Already the first scene, can't go back\");\n      }\n    },\n    importFile() {\n      document.getElementById('file-input').click();\n    },\n    onFileInputChange(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        const text = event.target.result;\n        this.parseNovelText(text);\n      };\n      reader.readAsText(file);\n    },\n    parseNovelText(text) {\n      const lines = text.trim().split('\\n');\n      let title = '';\n      let author = '';\n      let content = '';\n      let l = 0;\n      //this.store.btnToggle = !this.store.btnToggle;\n      for (let line of lines) {\n        if (line.startsWith('Story Title: ')) {\n          title = line.slice(13);\n        } else if (line.startsWith('Authors: ')) {\n          author = line.slice(9);\n        } else {\n          content += line + '<br/>';\n          l += 1\n        }\n      }\n      this.novel.title = title;\n      this.novel.author = author;\n      this.novel.content = content;\n\n      const nodes = content.split('<br/>');\n      \n      for (let i = 0; i < l + 1; i++) {\n        this.paragraphs.push({\n          sourceIndex: null,\n          wordIndex: null,\n          content: \"\",\n          paragraphGoTo: i,\n          paragraphIndex: i\n        });\n      }\n      this.index = 0;\n      nodes.forEach((paragraphText,i) => {\n        const matches = paragraphText.match(/\\[(\\d+)\\] \\[(.*?)\\] (.*) \\[(\\d+)\\]/);\n        if (matches) {\n          const sourceIndex = parseInt(matches[1]);\n          const wordIndex = matches[2];\n          const content = matches[3].replaceAll('\"', \"'\");\n          const paragraphGoTo = parseInt(matches[4]);\n          this.index += 1\n\n          this.paragraphs[i].sourceIndex = sourceIndex;\n          this.paragraphs[i].wordIndex = wordIndex === \"\" ? \" \" : wordIndex;\n          this.paragraphs[i].content = content;\n          this.paragraphs[i].paragraphGoTo = paragraphGoTo;   \n          if (i === 0) {\n            this.currentScene.sourceIndex = sourceIndex;\n            this.currentScene.wordIndex = wordIndex;\n            this.currentScene.content = content;\n            this.currentScene.paragraphIndex = paragraphGoTo;\n            this.readingOrder.push(this.currentScene.paragraphIndex);\n            //this.readContents.push(this.currentScene.content);\n          }\n          if (content.replaceAll(\" \", \"\") === \"GOTOEXISTINGNODE\") {\n            this.index -= 1\n            //avoid unique index repeat\n            this.paragraphs[i].paragraphIndex = 0;\n          } else {\n            this.paragraphs[i].paragraphIndex = paragraphGoTo;\n          }\n        }\n      });\n    },\n    handleWordClick(event) {\n      const selectedWord = event.target.closest('.highlighted-word');\n      if (selectedWord) {\n        const wordIndex = selectedWord.textContent.trim();\n        let nextParagraph = this.paragraphs.find((paragraph) => {\n          return paragraph.sourceIndex === this.currentScene.paragraphIndex\n            && paragraph.wordIndex.toLowerCase() === wordIndex.toLowerCase()\n        });\n        //二次跳转\n        if (nextParagraph && nextParagraph.paragraphIndex == 0) {\n          nextParagraph = this.paragraphs.find((paragraph) => {\n            return nextParagraph.paragraphGoTo === paragraph.paragraphIndex\n          });\n        }\n        if (nextParagraph) {\n          this.selectedWords.push(wordIndex);\n          this.readContents.push(this.currentScene.content);\n          this.readingOrder.push(this.currentScene.paragraphIndex);\n          this.currentScene.sourceIndex = nextParagraph.sourceIndex;\n          this.currentScene.wordIndex = nextParagraph.wordIndex;\n          this.currentScene.content = nextParagraph.content;\n          this.currentScene.paragraphIndex = nextParagraph.paragraphIndex;\n        } else {\n          alert(\"No scene is connected to this word.\");\n        }\n      }\n    },\n  }\n};\n</script>\n<style>\n.header {\n  display: flex;\n  /* 将 header 标签的 display 属性设置为 flex */\n  align-items: center;\n  /* 垂直居中 */\n  justify-content: space-between;\n  /* 将子元素分散对齐 */\n  padding: 10px;\n  /* 添加 padding 以增加内容的内边距 */\n}\n\n.content {\n  font-size: 2em;\n  text-indent: 2em;\n  text-align: left;\n}\n\n\n.h1 {\n  display: inline-block;\n  vertical-align: middle;\n  /* 可以让按钮和标题在同一垂直位置 */\n}\n\n\n.read-content {\n  font-size: 2em;\n  text-indent: 2em;\n  text-align: left;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.highlighted-word-underlined {\n  text-decoration: underline;\n}\n\n</style>\n","<template>\n    <transition name=\"fade\">\n      <div v-if=\"this.store.tutorialToggle\" class=\"tutorial\">\n        <div class=\"tutorial-item\">\n          <button class=\"button\">Import</button>\n          <p>Click this button to import an eBook.</p>\n        </div>\n        <div class=\"tutorial-item\">\n            <span>In a</span><span class=\"highlighted-word\"> distant</span><span>land</span>\n          <p>Click on the blue light text to go to the next story progress corresponding to the keyword.</p>\n        </div>\n        <div class=\"tutorial-item\">\n          <button class=\"preScene-btn\">⬅️</button>\n          <p>Click this button to return to the paragraph where the previous keyword is located.</p>\n        </div>\n      </div>\n    </transition>\n  </template>\n<script>\nimport { useStore } from '../../stores/store';\n\nexport default {\n  setup() {\n    const store = useStore();\n    return { store };\n  },\n};\n</script>\n  ","import { render } from \"./ReaderTutorial.vue?vue&type=template&id=7189bbd0\"\nimport script from \"./ReaderTutorial.vue?vue&type=script&lang=js\"\nexport * from \"./ReaderTutorial.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tggs636/Desktop/IDNCreater/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ReaderView.vue?vue&type=template&id=4d4c9293\"\nimport script from \"./ReaderView.vue?vue&type=script&lang=js\"\nexport * from \"./ReaderView.vue?vue&type=script&lang=js\"\n\nimport \"./ReaderView.vue?vue&type=style&index=0&id=4d4c9293&lang=css\"\n\nimport exportComponent from \"/Users/tggs636/Desktop/IDNCreater/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["useNovelStore","defineStore","state","currentNovel","novels","actions","async","text","this","setNovelContent","index","content","class","_createElementVNode","_createElementBlock","_createVNode","_component_ReaderTutorial","$setup","btnToggle","_hoisted_1","_hoisted_2","onClick","$options","_hoisted_3","$data","title","author","_hoisted_5","_Fragment","readContent","key","innerHTML","style","type","id","onChange","_hoisted_4","_createBlock","_Transition","name","store","tutorialToggle","setup","useStore","__exports__","components","ReaderTutorial","novelStore","data","readContents","selectedWords","readingOrder","novel","paragraphs","currentScene","sourceIndex","wordIndex","created","fromCommunity","computed","highlightedReadContents","map","selectedWord","regex","RegExp","replace","highlightedCurrentSceneContent","forEach","paragraph","paragraphIndex","methods","$route","query","startReading","parseNovelText","alert","preScene","length","preNode","preParagraph","find","pop","importFile","document","getElementById","click","onFileInputChange","event","file","target","files","reader","FileReader","onload","result","readAsText","lines","trim","split","l","line","startsWith","slice","nodes","i","push","paragraphGoTo","paragraphText","matches","match","parseInt","replaceAll","handleWordClick","closest","textContent","nextParagraph","toLowerCase","render"],"sourceRoot":""}