{"version":3,"file":"js/tutorial.813d80c5.js","mappings":"2QACOA,MAAM,Y,UAETC,EAAAA,EAAAA,GAAiB,UAAb,YAAQ,K,GACPD,MAAM,Q,SASyBA,MAAM,W,UACxCC,EAAAA,EAAAA,GAAwE,SAArE,qEAAiE,K,UACpEA,EAAAA,EAAAA,GAMK,YALHA,EAAAA,EAAAA,GAC0F,UADtF,uMAEJA,EAAAA,EAAAA,GACiB,UADb,uHAEJA,EAAAA,EAAAA,GAAoF,UAAhF,iFAA2E,K,GANjFC,EACAC,G,SAQgCH,MAAM,W,UACtCC,EAAAA,EAAAA,GAAuD,SAApD,oDAAgD,K,UACnDA,EAAAA,EAAAA,GAGK,YAFHA,EAAAA,EAAAA,GAAmG,UAA/F,+FACJA,EAAAA,EAAAA,GAAuF,UAAnF,oFAA8E,K,GAHpFG,EACAC,G,SAK+BL,MAAM,W,UACrCC,EAAAA,EAAAA,GAAqC,SAAlC,kCAA8B,K,GAAjCK,G,SAEiCN,MAAM,W,qhGACvCO,G,SAgDiCP,MAAM,W,UACvCC,EAAAA,EAAAA,GAA6H,SAA1H,0HAAsH,K,UAC3HA,EAAAA,EAAAA,GAKK,YAJHA,EAAAA,EAAAA,GAAqM,UAAjM,iMACJA,EAAAA,EAAAA,GAAgc,UAA5b,4bACJA,EAAAA,EAAAA,GAAmM,UAA/L,+LACJA,EAAAA,EAAAA,GAAmJ,UAA/I,gJAA0I,K,GAL9IO,EACFC,G,SAOsCT,MAAM,W,UAC1CC,EAAAA,EAAAA,GAA6H,SAA1H,0HAAsH,K,UAC3HA,EAAAA,EAAAA,GAIK,YAHHA,EAAAA,EAAAA,GAA2L,UAAvL,uLACJA,EAAAA,EAAAA,GAAkR,UAA9Q,8QACJA,EAAAA,EAAAA,GAA2V,UAAvV,wVAAkV,K,GAJtVS,EACFC,G,SAMqCX,MAAM,Y,+EAlG7CY,EAAAA,EAAAA,IAsGM,MAtGNC,EAsGM,EArGJC,EAAAA,EAAAA,IAA8DC,EAAAA,CAA5CC,MAAA,wBAClBC,GACAhB,EAAAA,EAAAA,GAQM,MARNiB,EAQM,EAPJjB,EAAAA,EAAAA,GAAoG,UAA3FkB,QAAK,eAAEC,EAAAA,UAAY,WAAYpB,OAAK,SAAAqB,OAA0B,YAAdD,EAAAA,aAA2B,UAAO,IAC3FnB,EAAAA,EAAAA,GAA8F,UAArFkB,QAAK,eAAEC,EAAAA,UAAY,SAAUpB,OAAK,SAAAqB,OAA0B,UAAdD,EAAAA,aAAyB,QAAK,IACrFnB,EAAAA,EAAAA,GAA2F,UAAlFkB,QAAK,eAAEC,EAAAA,UAAY,QAASpB,OAAK,SAAAqB,OAA0B,SAAdD,EAAAA,aAAwB,OAAI,IAClFnB,EAAAA,EAAAA,GAAiG,UAAxFkB,QAAK,eAAEC,EAAAA,UAAY,UAAWpB,OAAK,SAAAqB,OAA0B,WAAdD,EAAAA,aAA0B,SAAM,IACxFnB,EAAAA,EAAAA,GAAiG,UAAxFkB,QAAK,eAAEC,EAAAA,UAAY,UAAWpB,OAAK,SAAAqB,OAA0B,WAAdD,EAAAA,aAA0B,SAAM,IACxFnB,EAAAA,EAAAA,GAA0G,UAAjGkB,QAAK,eAAEC,EAAAA,UAAY,aAAcpB,OAAK,SAAAqB,OAA0B,cAAdD,EAAAA,aAA6B,YAAS,IACjGnB,EAAAA,EAAAA,GAAuG,UAA9FkB,QAAK,eAAEC,EAAAA,UAAY,YAAapB,OAAK,SAAAqB,OAA0B,aAAdD,EAAAA,aAA4B,WAAQ,KAEvE,YAAdA,EAAAA,YAAS,WAApBR,EAAAA,EAAAA,IASM,MATNU,EASM,oBACmB,UAAdF,EAAAA,YAAS,WAApBR,EAAAA,EAAAA,IAMM,MANNW,EAMM,oBACmB,SAAdH,EAAAA,YAAS,WAApBR,EAAAA,EAAAA,IAEM,MAFNY,EAEM,oBACmB,WAAdJ,EAAAA,YAAS,WAApBR,EAAAA,EAAAA,IA+CM,MA/CNa,EA+CM,oBAEmB,WAAdL,EAAAA,YAAS,WAApBR,EAAAA,EAAAA,IAQM,MARNc,EAQM,oBACmB,cAAdN,EAAAA,YAAS,WAApBR,EAAAA,EAAAA,IAOM,MAPNe,EAOM,oBACmB,aAAdP,EAAAA,YAAS,WAApBR,EAAAA,EAAAA,IAGM,MAHNgB,EAGM,WAFH3B,EAAAA,EAAAA,GAAsG,YAA5FD,MAAQ,WAAW6B,YAAY,+B,qCAAwCT,EAAAA,SAAQ,I,iBAARA,EAAAA,aACjFnB,EAAAA,EAAAA,GAA+C,UAAtCkB,QAAK,oBAAEW,EAAAA,gBAAAA,EAAAA,kBAAAA,KAAgB,cAAM,gB,gBCnGD9B,MAAM,Y,GAC1CC,EAAAA,EAAAA,GAGM,OAHDD,MAAM,iBAAe,EACxBC,EAAAA,EAAAA,GAAgC,UAAxBD,MAAM,YACdC,EAAAA,EAAAA,GAAqC,SAAlC,oCAA8B,G,GAFnCgB,G,0CAFJc,EAAAA,EAAAA,IAOaC,EAAAA,GAAAA,CAPDC,KAAK,QAAM,C,kBACrB,IAKM,MALUC,MAAMC,iBAAc,WAApCvB,EAAAA,EAAAA,IAKM,MALNC,EAKM,uB,oBAMZ,GACEuB,QACE,MAAMF,GAAQG,EAAAA,EAAAA,KACd,MAAO,CAAEH,QACX,G,UCZF,MAAMI,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,8BFuGA,GACEC,WAAY,CACVC,iBAAgBA,GAElBJ,QACE,MAAMK,GAAOC,EAAAA,EAAAA,KACb,MAAO,CAAED,OACX,EACAE,OACE,MAAO,CACLC,SAAU,GACVC,UAAW,UAEf,EACAC,QAAS,CACPC,iBACE,IAAIC,EAAO,IAAIC,KAAK,CAACC,KAAKN,UAAW,CACnCO,KAAM,eAERD,KAAKE,yBAAyBJ,EAAME,KAAKT,KAAKY,SAASC,MAAQ,OACjE,EACAC,+BAA+BC,EAAMC,GACnC,MAAMC,GAAUC,EAAAA,EAAAA,IAAWC,EAAAA,GACrBC,GAAaC,EAAAA,EAAAA,IAAIJ,EAAU,aAAYD,KACvCM,EAAQb,KAAKT,KAAKY,SAASU,MAC3BC,GAAaC,EAAAA,EAAAA,IAAqBJ,EAAYL,EAAM,CAExDU,eAAgB,CACd,aAAgBH,KAGpBC,EAAWG,GAAG,iBACXC,IAGC,MAAMC,EAAYD,EAASE,iBAAmBF,EAASG,WAAc,IAErE,OADAC,QAAQC,IAAI,aAAeJ,EAAW,UAC9BD,EAASM,OACf,IAAK,SACHF,QAAQC,IAAI,oBACZ,MACF,IAAK,UACHD,QAAQC,IAAI,qBACZ,MACF,QACE,MAAK,IAGVE,IAECH,QAAQG,MAAM,iBAAkBA,GAChCC,MAAM,oEAAoE,IAE5ErB,UAEE,MAAMsB,QAAoBC,EAAAA,EAAAA,IAAejB,GACzCe,MAAM,8BAA+BC,EAAY,GAKvD,IGpKJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASE,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://IDNCreaterPages/./src/views/TutorialView.vue","webpack://IDNCreaterPages/./src/components/tutorials/tutorialTutorial.vue","webpack://IDNCreaterPages/./src/components/tutorials/tutorialTutorial.vue?f811","webpack://IDNCreaterPages/./src/views/TutorialView.vue?41c2"],"sourcesContent":["<template>\n  <div class=\"tutorial\">\n    <tutorialTutorial style=\"min-height: auto\"></tutorialTutorial>\n    <h1>Tutorial</h1>\n    <div class=\"tabs\">\n      <button @click=\"activeTab = 'general'\" :class=\"{ active: activeTab === 'general' }\">General</button>\n      <button @click=\"activeTab = 'login'\" :class=\"{ active: activeTab === 'login' }\">Login</button>\n      <button @click=\"activeTab = 'home'\" :class=\"{ active: activeTab === 'home' }\">Home</button>\n      <button @click=\"activeTab = 'author'\" :class=\"{ active: activeTab === 'author' }\">Author</button>\n      <button @click=\"activeTab = 'reader'\" :class=\"{ active: activeTab === 'reader' }\">Reader</button>\n      <button @click=\"activeTab = 'community'\" :class=\"{ active: activeTab === 'community' }\">Community</button>\n      <button @click=\"activeTab = 'feedback'\" :class=\"{ active: activeTab === 'feedback' }\">Feedback</button>\n    </div>\n    <div v-if=\"activeTab === 'general'\" class=\"content\">\n      <p>In this tutorial, I will show you the basic pages of this website</p>\n      <ol>\n        <li>The icons in the left column serve as links to various pages, from top to bottom: Login, Home, Author, Reader,\n          Community, Tutorial. The button at the bottom left is used to collapse this column.</li>\n        <li>The tutorial at the bottom center of the screen provides a brief overview of the current page for quick\n          reference.</li>\n        <li>If you are logged in, your email will be displayed in the top right corner.</li>\n      </ol>\n    </div>\n    <div v-if=\"activeTab === 'login'\" class=\"content\">\n      <p>In this tutorial, I will show you how to log in.</p>\n      <ol>\n        <li>Click on the icons in the center to be redirected to the corresponding websites for login.</li>\n        <li>The log out button in the top right corner is for logging out of your account.</li>\n      </ol>\n    </div>\n    <div v-if=\"activeTab === 'home'\" class=\"content\">\n      <p>There is nothing on this page.</p>\n    </div>\n    <div v-if=\"activeTab === 'author'\" class=\"content\">\n      <p>In this tutorial, I will show you how to use this creative writing tool. With this tool, you can build the\n        structure of your story and visualize it as a mind map.</p>\n      <ol>\n        <li>Open the Author page, and in the right column, you will see an input area for writing the various paragraphs\n          of your story. In this area, you can:\n          <ul>\n            <li>Enter the story title</li>\n            <li>Import an existing story</li>\n            <li>Add story paragraphs</li>\n            <li>Choose connections and jumps between paragraphs</li>\n          </ul>\n        </li>\n        <li>To write a new paragraph, type the text you want to add in the large input box.</li>\n        <li>To specify connections between paragraphs, you need to provide the following information:\n          <ul>\n            <li>Start from which paragraph index (after the sentence)</li>\n            <li>Jump to which word (click) in the paragraph</li>\n            <li>Jump to which paragraph index (default starts a new paragraph)</li>\n            <li>In summary, the structure of each paragraph is the first [number] representing the source index, the\n              second [word] representing the source keyword, and the third [number] representing the paragraph index,\n              which is unique.</li>\n          </ul>\n        </li>\n        <li>Click the \"Add Para\" button to submit a new paragraph. This will automatically update the mind map and add the\n          new paragraph to the story text.</li>\n        <li>The left column is the mind map area, which will automatically display once there is story content. Here, you\n          can see the structure and branches of your story.</li>\n        <li>The left column operation methods are as follows:\n          <ul>\n            <li>Scroll the mouse wheel up and down to zoom in and out</li>\n            <li>Hold option/alt and press the left mouse button to drag the image</li>\n            <li>Hold option/alt and scroll the mouse wheel up and down for vertical scrolling</li>\n            <li>Hold shift and scroll the mouse wheel up and down for horizontal scrolling</li>\n          </ul>\n        </li>\n        <li>To download your story locally, click the \"Download Story Locally\" button. This will generate a text file\n          (title.txt) containing your story.</li>\n        <li>To upload your story to the database/community, click the \"Upload Story Online\" button. This will upload a\n          text file (title.txt) containing your story. Please note that this will overwrite any existing files with the\n          same name in the database!</li>\n        <li>If you want to import an existing story locally, click the \"Import Story\" button, then choose the file\n          containing the story text. Once imported, you can continue to edit and update your story within the application.\n        </li>\n      </ol>\n      <p>By following these steps, you can easily build and visualize complex story structures, providing better\n        organization and inspiration for your writing process. Happy writing!</p>\n    </div>\n    \n    <div v-if=\"activeTab === 'reader'\" class=\"content\">\n      <p>This user guide will help you understand how to use the interactive multi-author novel reader based on the above code.</p>\n    <ol>\n      <li>Import a novel: Click the \"Import\" button to import a multi-author interactive novel text file. Supported file formats are plain text (.txt) and must meet the requirements of this website.</li>\n      <li>Read the novel: Once you have successfully imported the novel, the first scene of the novel will be automatically displayed on the page. While reading, notice the blue underlined words in the novel; these words are clickable and will lead you to the next scene. By the way, when you successfully import a novel, the left navigation bar will automatically collapse, and you can click the button in the bottom left corner to expand it again.</li>\n      <li>Navigate through scenes: Click on the blue underlined words to navigate to the next related scene. During the reading process, paragraphs you have already read will be displayed in gray.</li>\n      <li>Go back to the previous scene: Click on the \"⬅️\" button at the top of the page to return to the paragraph containing the previous keyword.</li>\n    </ol>\n    </div>\n    <div v-if=\"activeTab === 'community'\" class=\"content\">\n      <p>This user guide will help you understand how to use the Community interface. Here is an overview of the main features:</p>\n    <ol>\n      <li>Browse popular novel list: On the main page, you can see a list of popular novels. These novels have cover images and titles. Click on any novel cover to start reading the story.</li>\n      <li>Upload a new story: To upload a new story to the database, click the \"Submit Image/Text\" button, and then select a text file that meets the format requirements from the file picker. Once the file is successfully imported, it will be added to the popular novel list.</li>\n      <li>Upload a new cover: To upload a new cover to the database, click the \"Submit Image/Text\" button, and then select an image file that meets the format requirements from the file picker. Once the file is successfully imported, it will automatically match the corresponding novel title (case-sensitive) and be added to the popular novel list.</li>\n    </ol>\n    </div>\n    <div v-if=\"activeTab === 'feedback'\" class=\"feedback\">\n       <textarea class = \"feedback\" placeholder=\"please give me your feedback\" v-model=\"feedback\"></textarea>\n       <button @click=\"uploadFeedBack\">Submit</button>\n    </div>\n  </div>\n</template>\n<script>\nimport tutorialTutorial from '../components/tutorials/tutorialTutorial.vue';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { app } from \"../../firebaseConfig\";\nimport { useUserStore } from '../stores/userStore';\nexport default {\n  components: {\n    tutorialTutorial,\n  },\n  setup() {\n    const user = useUserStore();\n    return { user };\n  },\n  data() {\n    return {\n      feedback: '',\n      activeTab: 'general'\n    };\n  },\n  methods: {\n    uploadFeedBack() {\n      var blob = new Blob([this.feedback], {\n        type: \"text/plain\"\n      });\n      this.uploadTextFileToFirebase(blob, this.user.userInfo.email + \".txt\");\n    },\n    async uploadTextFileToFirebase(file, title) {\n      const storage = getStorage(app);\n      const storageRef = ref(storage, `Feedbacks/${title}`);\n      const token = this.user.userInfo.token;\n      const uploadTask = uploadBytesResumable(storageRef, file, {\n        // 包含身份验证令牌的自定义元数据\n        customMetadata: {\n          'firebaseAuth': token,\n        }\n      });\n      uploadTask.on('state_changed',\n        (snapshot) => {\n          // Observe state change events such as progress, pause, and resume\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + progress + '% done');\n          switch (snapshot.state) {\n            case 'paused':\n              console.log('Upload is paused');\n              break;\n            case 'running':\n              console.log('Upload is running');\n              break;\n            default:\n              break;\n          }\n        },\n        (error) => {\n          // Handle unsuccessful uploads\n          console.error('Upload failed:', error);\n          alert(\"Uploading to the server failed, please check if you are logged in\")\n        },\n        async () => {\n          // Handle successful uploads on complete\n          const downloadURL = await getDownloadURL(storageRef);\n          alert('Thank you for your feedback', downloadURL);\n          // Call a function to handle the file URL, e.g., save it in your database\n          // handleFileURL(downloadURL);\n        }\n      );\n    },\n  }\n};\n</script>\n<style scoped>\n.tutorial {\n  font-family: Arial, sans-serif;\n  padding: 16px;\n  min-height: 95%;\n  max-height: 95%; \n  overflow: auto;\n}\n\n.feedback {\n  width: 80%;\n  height: 10em;\n}\n\n\nh1 {\n  font-size: 32px;\n  margin-bottom: 16px;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 8px;\n}\n\n.tabs {\n  margin-bottom: 16px;\n}\n\nbutton {\n  padding: 8px 16px;\n  background-color: #80ADD7;\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n  margin-right: 8px;\n}\n\nbutton.active {\n  background-color: #7ED321;\n}\n\n.content {\n  padding: 16px;\n  border: 1px solid #f0f0f0;\n  border-radius: 8px;\n  font-size: 16px;\n  text-align: left;\n  overflow: auto;\n}\n\nol {\n  margin: 0 0 16px 24px;\n}\n\nul {\n  margin: 0 0 16px 40px;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\np {\n  margin-bottom: 16px;\n}</style>\n\n\n","<template>\n    <transition name=\"fade\">\n      <div v-if=\"this.store.tutorialToggle\" class=\"tutorial\">\n        <div class=\"tutorial-item\">\n          <button class=\"button\"></button>\n          <p>Click to move to Each Tutorial</p>\n        </div>\n      </div>\n    </transition>\n  </template>\n<script>\nimport { useStore } from '../../stores/store';\n\nexport default {\n  setup() {\n    const store = useStore();\n    return { store };\n  },\n};\n</script>\n  ","import { render } from \"./tutorialTutorial.vue?vue&type=template&id=900c0862\"\nimport script from \"./tutorialTutorial.vue?vue&type=script&lang=js\"\nexport * from \"./tutorialTutorial.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tggs636/Desktop/IDNCreater/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TutorialView.vue?vue&type=template&id=9a433578&scoped=true\"\nimport script from \"./TutorialView.vue?vue&type=script&lang=js\"\nexport * from \"./TutorialView.vue?vue&type=script&lang=js\"\n\nimport \"./TutorialView.vue?vue&type=style&index=0&id=9a433578&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tggs636/Desktop/IDNCreater/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9a433578\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_5","_hoisted_6","_hoisted_9","_hoisted_10","_hoisted_13","_hoisted_16","_hoisted_21","_hoisted_22","_hoisted_25","_hoisted_26","_createElementBlock","_hoisted_1","_createVNode","_component_tutorialTutorial","style","_hoisted_2","_hoisted_3","onClick","$data","active","_hoisted_4","_hoisted_8","_hoisted_12","_hoisted_15","_hoisted_20","_hoisted_24","_hoisted_28","placeholder","$options","_createBlock","_Transition","name","store","tutorialToggle","setup","useStore","__exports__","components","tutorialTutorial","user","useUserStore","data","feedback","activeTab","methods","uploadFeedBack","blob","Blob","this","type","uploadTextFileToFirebase","userInfo","email","async","file","title","storage","getStorage","app","storageRef","ref","token","uploadTask","uploadBytesResumable","customMetadata","on","snapshot","progress","bytesTransferred","totalBytes","console","log","state","error","alert","downloadURL","getDownloadURL","render"],"sourceRoot":""}